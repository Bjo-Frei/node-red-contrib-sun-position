{
	"blind-control": {
		"label": {
			"windowText": "window settings, measurement from the floor to bottom and top of the window covered by the blind",
			"windowTop": "window top",
			"windowBottom": "window bottom",
			"windowAzimuthText": "representing the orientation of the window to geographical north (in degrees) when the sun falls into the window (sun azimuth).",
			"windowAzimuthStart":"start",
			"windowAzimuthEnd": "end",
			"blindText": "blind settings",
			"blindIncrement": "Increment",
			"blindOpenPos": "open position (max)",
			"blindClosedPos": "closed position (min)",
			"blindPosOverwriteText": "manual overwrite of the blind position",
			"blindPosOverwriteExpire": "expire",
			"addTimes": "alternate start or end time",
			"TimeText": "Time control: starting midnight, first matching line will used",
			"compareTime": "base time",
			"onlyIf": "only if",
			"blindLevel": "Blind level",
			"sunControlActive": "active",
			"sunControlActiveText": "Restricting the extent to which direct sunlight may shine into the room",
			"sunFloorLength": "length on the floor",
			"sunMinAltitude": "min altitude threshold",
			"tempValue": "Temperature",
			"tempThreshold": "threshold",
			"tempBlindPos": "blind position",
			"cloudValue": "Cloud",
			"cloudThreshold": "Threshold",
			"cloudBlindPos": "blind position",
			"now": "date.now",
			"msgts": "msg.ts",
			"msglc": "msg.lc",
			"msgtime": "msg.time",
			"msgvalue": "msg.value",
			"showEnhSettings": "Enhanced settings"
		},
		"placeholder": {
			"windowTop": "top of the window",
			"windowBottom": "bottom of the window",
			"windowAzimuthStart": "window left to geographical north",
			"windowAzimuthEnd": "window right to geographical north",
			"blindIncrement": "0.01 or 1",
			"blindOpenPos": "100",
			"blindClosedPos": "0",
			"blindPosOverwriteExpire": "(opt) the duration a manual setting will remain is place",
			"sunFloorLength": "the extent to which direct sunlight is to be allowed into the room through the window, defined as a length on the floor",
			"sunMinAltitude": "(opt) minimum altitude of the sun for determination of blind position",
			"cloudValue": "percentage of sky occluded by clouds",
			"cloudThreshold": "threshold for set blind position",
			"cloudBlindPos": "blind position when cloud-value is below threshold",

			"name": "Name",
			"nightposition": "100",
			"expiryperiod": "120",
			"property": "Property",
			"startOffset": "0",
			"endOffset": "0",
			"startOffsetAlt": "0",
			"endOffsetAlt": "0"
		},
		"tips": {
			"addTimes": "..."
		},
		"reasons": {
			"overwriteAlarm": "position is overwritten by alarm",
			"overwritePrio": "position is overwritten by priority, no expire",
			"overwrite": "position is overwritten, will expire __time__",
			"abs": "fixed position by time",
			"sunMinAltitude": "sun below minimum altitude",
			"sunNotInWin": "Sun not in window",
			"sunCtrl": "sun control",
			"cloudExceeded": "Cloud overcast conditions",
			"tempExceeded": "temp exceeded",
			"openDef": "in default position by time"
		},
		"states": {
			"overwriteAlarm": "overwritten, alarm",
			"overwritePrio": "overwritten, until reset",
			"overwrite": "overwritten, expire",
			"abs": "time absolute",
			"sunMinAltitude": "min altitude",
			"sunNotInWin": "no sun in window",
			"sunCtrl": "sun control",
			"cloudExceeded": "cloud",
			"tempExceeded": "temp",
			"openDef": "default"
		},
		"errors": {
			"error-time": "Error get time: __message__",
			"invalid-propertyStart-type": "Invalid Property Type for alternate start: __type__",
			"invalid-propertyEnd-type": "Invalid Property Type for alternate end: __type__",
			"invalid-blind-position": "Given Blind-Position __pos__ is not a valid Position!"
		}
	}
}