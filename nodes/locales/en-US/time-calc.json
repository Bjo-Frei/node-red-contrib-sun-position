{
    "time-calc": {
        "label": {
            "time-calc": "time-calc",
            "calc": "calc",
            "name": "Name",
            "position": "Position",
            "operand1": "Input",
            "operand1Format": "parse format",
            "operand1Offset": "Offset",
            "operatorContainer": "compare with",
            "onlyif": "only if",
            "checkall": "stopping after first match (if)",
            "stopfirst": "checking all rules",
            "nothing": "nothing",
            "result1": "result",
            "result1Value": "value",
            "result1Format": "output format",
            "result1Offset": "Offset",
            "payload": "Payload",
            "topic": "Topic",
            "none": "none",
            "stopped": "stopped",
            "timestamp": "timestamp",
            "binary": "binary",
            "json": "json",
            "jsonata": "json expr.",
            "blank": "\"\"",
            "success": "Successfully injected: __label__"
        },
        "operatorsGroups": [
            {
                "id": "ms",
                "label": "complete Timestamp"
            },
            {
                "id": "sec",
                "label": "Timestamp, ignore Milliseconds"
            },
            {
                "id": "min",
                "label": "Timestamp, ignore Seconds"
            },
            {
                "id": "hour",
                "label": "Timestamp, ignore Minutes"
            },
            {
                "id": "date",
                "label": "complete Date"
            },
            {
                "id": "month",
                "label": "Year and Month"
            }
        ],
        "operators": [
            {
                "group": "ms",
                "label": "==",
                "text": "equal"
            },
            {
                "group": "ms",
                "label": "!=",
                "text": "unequal"
            },
            {
                "group": "ms",
                "label": ">",
                "text": "greater"
            },
            {
                "group": "ms",
                "label": ">=",
                "text": "greater or equal"
            },
            {
                "group": "ms",
                "label": "<",
                "text": "lesser"
            },
            {
                "group": "ms",
                "label": "<=",
                "text": "lesser or equal"
            },
            {
                "group": "sec",
                "label": "== (sec)",
                "text": "equal (ignore milliseconds)"
            },
            {
                "group": "sec",
                "label": "!= (sec)",
                "text": "unequal (ignore milliseconds)"
            },
            {
                "group": "sec",
                "label": "> (sec)",
                "text": "greater (ignore milliseconds)"
            },
            {
                "group": "sec",
                "label": ">= (sec)",
                "text": "greater or equal (ignore milliseconds)"
            },
            {
                "group": "sec",
                "label": "< (sec)",
                "text": "lesser (ignore milliseconds)"
            },
            {
                "group": "sec",
                "label": "<= (sec)",
                "text": "lesser or equal (ignore milliseconds)"
            },
            {
                "group": "min",
                "label": "== (min)",
                "text": "equal (ignore seconds)"
            },
            {
                "group": "min",
                "label": "!= (min)",
                "text": "unequal (ignore seconds)"
            },
            {
                "group": "min",
                "label": "> (min)",
                "text": "greater (ignore seconds)"
            },
            {
                "group": "min",
                "label": ">= (min)",
                "text": "greater or equal (ignore seconds)"
            },
            {
                "group": "min",
                "label": "< (min)",
                "text": "lesser (ignore seconds)"
            },
            {
                "group": "min",
                "label": "<= (min)",
                "text": "lesser or equal (ignore seconds)"
            },
            {
                "group": "hour",
                "label": "== (h)",
                "text": "equal (ignore minutes)"
            },
            {
                "group": "hour",
                "label": "!= (h)",
                "text": "unequal (ignore minutes)"
            },
            {
                "group": "hour",
                "label": "> (h)",
                "text": "greater (ignore minutes)"
            },
            {
                "group": "hour",
                "label": ">= (h)",
                "text": "greater or equal (ignore minutes)"
            },
            {
                "group": "hour",
                "label": "< (h)",
                "text": "lesser (ignore minutes)"
            },
            {
                "group": "hour",
                "label": "<= (h)",
                "text": "lesser or equal (ignore minutes)"
            },
            {
                "group": "date",
                "label": "== (date)",
                "text": "equal (ignore timestamp)"
            },
            {
                "group": "date",
                "label": "!= (date)",
                "text": "unequal (ignore timestamp)"
            },
            {
                "group": "date",
                "label": "> (date)",
                "text": "greater (ignore timestamp)"
            },
            {
                "group": "date",
                "label": ">= (date)",
                "text": "greater or equal (ignore timestamp)"
            },
            {
                "group": "date",
                "label": "< (date)",
                "text": "lesser (ignore timestamp)"
            },
            {
                "group": "date",
                "label": "<= (date)",
                "text": "lesser or equal (ignore timestamp)"
            },
            {
                "group": "month",
                "label": "== (month)",
                "text": "equal (year and month)"
            },
            {
                "group": "month",
                "label": "!= (month)",
                "text": "unequal (year and month)"
            },
            {
                "group": "month",
                "label": "> (month)",
                "text": "greater (year and month)"
            },
            {
                "group": "month",
                "label": ">= (month)",
                "text": "greater or equal (year and month)"
            },
            {
                "group": "month",
                "label": "< (month)",
                "text": "lesser (year and month)"
            },
            {
                "group": "month",
                "label": "<= (month)",
                "text": "lesser or equal (year and month)"
            }
        ],
        "outputFormatsGroups": [
            {
                "label": "Number"
            },
            {
                "label": "Text (string)"
            },
            {
                "label": "time (number) since emit"
            },
            {
                "label": "day of week"
            },
            {
                "label": "Text free"
            }
        ],
        "outputFormats": [
            {
                "group": "number",
                "name": "UNIX",
                "label": "milliseconds UNIX timestamp"
            },
            {
                "group": "number",
                "name": "YYYYMMDDHHMMSS",
                "label": "YYYYMMDDHHMMSS"
            },
            {
                "group": "number",
                "name": "YYYYMMDD_HHMMSS",
                "label": "YYYYMMDD.HHMMSS"
            },
            {
                "group": "string",
                "name": "ECMA262",
                "label": "ECMA-262",
                "add": "standard JSON Date representation"
            },
            {
                "group": "string",
                "name": "local",
                "label": "local date and time"
            },
            {
                "group": "string",
                "name": "localLong",
                "label": "local date and time enh."
            },
            {
                "group": "string",
                "name": "localTime",
                "label": "local time"
            },
            {
                "group": "string",
                "name": "localTimeLong",
                "label": "local time enh."
            },
            {
                "group": "string",
                "name": "localDate",
                "label": "local date"
            },
            {
                "group": "string",
                "name": "localDateLong",
                "label": "local date long"
            },
            {
                "group": "string",
                "name": "UTC",
                "label": "UTC date and time"
            },
            {
                "group": "string",
                "name": "ISO",
                "label": "ISO date and time"
            },
            {
                "group": "time",
                "name": "ms",
                "label": "milliseconds"
            },
            {
                "group": "time",
                "name": "sec",
                "label": "seconds"
            },
            {
                "group": "time",
                "name": "min",
                "label": "minutes"
            },
            {
                "group": "time",
                "name": "hour",
                "label": "hours"
            },
            {
                "group": "dayofweek",
                "name": "ISO",
                "label": "Day Name, e.g. Monday, 22.12."
            },
            {
                "group": "dayofweek",
                "name": "ISO",
                "label": "Day in relative, e.g. Today, 22.12."
            },
            {
                "group": "other",
                "name": "object",
                "label": "as object"
            },
            {
                "group": "other",
                "name": "other",
                "label": "Other"
            }
        ],
        "parseFormatsGroups": [
            {
                "label": "Number"
            },
            {
                "label": "Text (string)"
            },
            {
                "label": "Text free"
            }
        ],
        "parseFormats": [
            {
                "group": "number",
                "label": "milliseconds UNIX timestamp",
                "add": "xxx"
            },
            {
                "group": "string",
                "label": "ECMA-262",
                "add": "standard JSON Date representation"
            },
            {
                "group": "string",
                "label": "various - try different Formats",
                "add": "will try different formats"
            },
            {
                "group": "number",
                "label": "YYYYMMDDHHMMSS",
                "add": "xxx"
            },
            {
                "group": "number",
                "label": "YYYYMMDD.HHMMSS",
                "add": "xxx"
            },
            {
                "group": "other",
                "label": "Other",
                "add": "xxx"
            }
        ],
        "multiplierGroups": [
            {
                "label": "Standard"
            },
            {
                "label": "Special"
            }
        ],
        "multiplier": [
            {
                "label": "seconds"
            },
            {
                "label": "minutes"
            },
            {
                "label": "hours"
            },
            {
                "label": "days"
            },
            {
                "label": "weeks"
            },
            {
                "label": "month"
            },
            {
                "label": "year"
            }
        ],
        "days": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
        ],
        "month": [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
        ],
        "dayDiffNames": [
            "1 week ago",
            "6 days ago",
            "5 days ago",
            "4 days ago",
            "3 days ago",
            "2 days ago",
            "Yesterday",
            "Today",
            "Tomorrow",
            "day after tomorrow",
            "in 3 days",
            "in 4 days",
            "in 5 days",
            "in 6 days"
        ],
        "placeholder": {
            "position": "Position",
            "name": "Name",
            "topic": "Name",
            "property": "Property",
            "payloadStart": "",
            "payloadEnd": "",
            "startTime": "7:40",
            "startOffset": "0",
            "time": "18:15",
            "offset": "0",
            "timeAlt": "18:15",
            "timeAltOffset": "0"
        },
        "timeFormat": {
            "default": "ddd MMM dd yyyy HH:mm:ss",
            "shortDate": "m/d/yy",
            "mediumDate": "MMM d, yyyy",
            "longDate": "MMMM d, yyyy",
            "fullDate": "dddd, MMMM d, yyyy",
            "shortTime": "h:mm TT",
            "mediumTime": "h:mm:ss TT",
            "longTime": "h:mm:ss TT Z",
            "isoDate": "yyyy-MM-dd",
            "isoTime": "HH:MM:ss",
            "isoDateTime": "yyyy-MM-dd'T'HH:mm:ss",
            "isoUtcDateTime": "UTC:yyyy-MM-dd'T'HH:mm:ss'Z'"
        },
        "tips": {
            "config": "If time is set to 'not used' the inject node can only used manually or once!",
            "addTimes": "Here can be defined alternate time. If the given property is true the alternate time will be used instead the normal time. This can be used to have different time for holidays or other special days.",
            "recalc": "If the timestamp is given through a flow or global context, changes to these contexts only lead to a change of the planned emit time if a recalculation is done.",
            "addPayload": "With the additional message properties you can send the message with define up to 3 additional properties with enhanced settings. Especial there can be defined timestamps in relation to the message send timestamp."
        },
        "errors": {
            "error": "<strong>Error</strong>: __message__",
            "error-text": "Exception occured on time-calc",
            "error-title": "internal error",
            "unexpected": "unexpected error (__status__) __message__",
            "invalid-property-type": "Invalid Property Type: __type__",
            "invalid-json": "Invalid 'to' JSON property",
            "invalid-jsonata-expr": "Invalid JSONata expression: __error__",
            "not-deployed": "node not deployed",
            "no-response": "no response from server",
            "failed": "inject failed, see log for details",
            "failed2": "Inject failed: __error__",
            "toolong": "Interval too large"
        }
    }
}